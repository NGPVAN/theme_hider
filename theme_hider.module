<?php

/**
 * @file
 * Main module file for the Theme Hider module
 */

/**
 * Implements hook_form_alter().
 *
 * The main juice of this module, hides themes flagged as hidden in the admin
 * form.
 */
function theme_hider_form_alter(&$form, $form_state, $form_id) {
  switch ($form_id) {
    case 'system_themes_form':
      if (user_access('administer theme hider')) {
        if (variable_get('theme_hider_allow_admin', FALSE)) {
          // If this user has permissions and the setting to allow them to see
          // all themes is on, don't modify anything.
          return;
        }
      }

      $hidden_themes = variable_get('theme_hider_hidden', array());
      if (!empty($hidden_themes)) {
        $default_theme = variable_get('theme_default', '');
        foreach ($hidden_themes as $theme) {
          if ($theme === $default_theme) {
            // Don't want to hide the default theme, but if it's in the list
            // of themes to hide, don't allow this user to check or uncheck it.
            // Unfortunately, have to use JS for this because the D6 FAPI has
            // no way to disable individual checkboxes.
            // See: http://drupal.org/node/342316#comment-4732130
            drupal_add_js("Drupal.behaviors.theme_disable = function() {\$('input[name^=status[{$default_theme}]]').attr('disabled', 'disabled');};", 'inline');
            unset($form[$theme]['operations']);
          }
          else {
            unset($form[$theme]);
            unset($form['status']['#options'][$theme]);
            unset($form['theme_default']['#options'][$theme]);
          }
        }
      }
      break;
  }
}

/**
 * Implements hook_perm().
 */
function theme_hider_perm() {
  return array('administer theme hider');
}

/**
 * Implements hook_menu().
 */
function theme_hider_menu() {
  $items['admin/settings/theme_hider'] = array(
    'title' => t("Theme Hider"),
    'description' => t("Allows an admin user to filter the list of themes viewable by other users"),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('theme_hider_settings_form'),
    'type' => MENU_NORMAL_ITEM,
    'access arguments' => array('administer theme hider'),
  );
  return $items;
}

function theme_hider_settings_form() {
  drupal_add_js(drupal_get_path('module', 'theme_hider') . '/theme_hider.js');
  $current_default = variable_get('theme_default', '');

  $form = array();
  $themes = db_query("SELECT * FROM {system} WHERE type='theme' ORDER BY name ASC");
  while($theme = db_fetch_object($themes)) {
    $info = unserialize($theme->info);

    $options[$theme->name] = t($info['name']) .
      (($theme->name == $current_default) ? "<em>(" . t("current default") . ")</em>" : "");
  }

  $defaults = array();
  foreach (variable_get('theme_hider_hidden', array()) as $key => $value) {
    if (!empty($value)) {
      $defaults[] = $key;
    }
  }

  $check_all = l('Check all', '', array('fragment' => ' ', 'external' => TRUE, 'attributes' => array('id' => 'theme-hider-check-all'))) . ' | ' .
    l('Uncheck all', '', array('fragment' => ' ', 'external' => TRUE, 'attributes' => array('id' => 'theme-hider-uncheck-all')));

  $form['theme_hider_hidden'] = array(
    '#prefix' => $check_all,
    '#type' => 'checkboxes',
    '#title' => t("Themes to hide on !link", array('!link' => l('admin/build/themes', 'admin/build/themes'))),
    '#description' => t("Note, you cannot hide the default theme, so if that is checked below, users will still see it."),
    '#options' => $options,
  );
  if (!empty($defaults)) {
    $form['theme_hider_hidden']['#default_value'] = $defaults;
  }

  $form['theme_hider_allow_admin'] = array(
    '#type' => 'checkbox',
    '#title' => t("Allow users with %perms permission to see all themes", array('%perms' => 'administer theme hider')),
    '#default_value' => variable_get('theme_hider_allow_admin', FALSE),
  );
  return system_settings_form($form);
}
